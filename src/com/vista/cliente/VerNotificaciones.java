/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.vista.cliente;

import com.abstracto.Usuario;
import com.control.ControladorNotificaciones;
import com.entidades.Gimnasio;
import com.entidades.Notificacion;
import com.vista.PanelNotificacion;
import java.awt.BorderLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Estudiantes
 */
public class VerNotificaciones extends javax.swing.JPanel {
    JPanel menuPadre;
    Gimnasio gymPrincipal;
    Usuario usuarioActivo;
    ControladorNotificaciones controlNotificaciones;
    DefaultTableModel modelo;

    /**
     * Creates new form verNotificaciones
     */
    public VerNotificaciones(JPanel menu, Gimnasio principal, Usuario usuario) {
        initComponents();
        
        menuPadre = menu;
        gymPrincipal = principal;
        usuarioActivo = usuario;
        
        controlNotificaciones = new ControladorNotificaciones();
        controlNotificaciones.actualizarNotificaciones(usuarioActivo, gymPrincipal);
        tblNotificaciones.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent e){
                if(e.getClickCount() == 2){
                    int filaSeleccionada = tblNotificaciones.getSelectedRow();
                    mostrarNotificacion(filaSeleccionada);
                }
            }
        });
        
        modelo = (DefaultTableModel) tblNotificaciones.getModel();
        
        actualizarNotificaciones();
        tblNotificaciones.repaint();
    }
    
    public void actualizarNotificaciones(){
        List<Notificacion> notificaciones = usuarioActivo.getNotificaciones();
        modelo.setNumRows(0);
        for (Notificacion notificacion : notificaciones) {
            modelo.addRow(new Object[] {notificacion.getTitulo(), notificacion.getFecha().toString(), notificacion.getCodigo()});
        }
    }
    
    public void cambiarPanel(JPanel x){
        x.setSize(500, 299);
        x.setLocation(0, 0);
        
        contenidoNotificacion.removeAll();
        contenidoNotificacion.add(x, BorderLayout.CENTER);
        contenidoNotificacion.revalidate();
        contenidoNotificacion.repaint();
    }
    
    public void mostrarNotificacion(int fila){
        int codigo = (int) tblNotificaciones.getValueAt(fila, 2);
        List<Notificacion> notificaciones = usuarioActivo.getNotificaciones();
        for (Notificacion notificacion : notificaciones) {
            if(notificacion.getCodigo() == codigo){
                cambiarPanel(new PanelNotificacion(this, notificacion));
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblNotificaciones = new javax.swing.JTable();
        contenidoNotificacion = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(77, 77, 77));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblNotificaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Titulo", "Fecha", "CÃ³digo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblNotificaciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblNotificaciones);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 24, 500, 130));

        contenidoNotificacion.setBackground(new java.awt.Color(255, 255, 255));
        contenidoNotificacion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 153), 3));

        javax.swing.GroupLayout contenidoNotificacionLayout = new javax.swing.GroupLayout(contenidoNotificacion);
        contenidoNotificacion.setLayout(contenidoNotificacionLayout);
        contenidoNotificacionLayout.setHorizontalGroup(
            contenidoNotificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        contenidoNotificacionLayout.setVerticalGroup(
            contenidoNotificacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 293, Short.MAX_VALUE)
        );

        add(contenidoNotificacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 181, 500, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/imagenes/imagenmembresia.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contenidoNotificacion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNotificaciones;
    // End of variables declaration//GEN-END:variables
}
